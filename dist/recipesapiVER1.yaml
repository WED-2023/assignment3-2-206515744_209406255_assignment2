openapi: 3.0.3
info:
  version: 1.0.1
  title: Grandma Recipe API
  description: An API that allows users to register to the recpies website, get exisiting recpies information, add their own recipes and get users data.
  contact:
  name: Ilay Cohen and Victor Gavrilenko
servers:
  - url: "http://127.0.0.1:80"
    description: SwaggerHub API Auto Mocking
tags:
  - name: Auth
    description: User registration and login
  - name: Recipes
    description: Public and user‑generated recipes
  - name: Users
    description: "Personal resources (favorites, history, own recipes)"
  - name: MealPlan
    description: Planning meals.
  - name: FamilyRecipes
    description: Traditional family recipes
paths:
  /Register:
    post:
      tags:
        - Auth
      summary: Register a new user
      description: "Creates a new user account and stores the information in the database. Username must be unique. if a user tries to register with an existing username, the server will return 409 conflict, and then the user will be asked to choose a different username. When registered successfully, the system will redirect to the login page."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterUser"
        required: true
      responses:
        "201":
          description: User created
        "409":
          description: Username already exists
  /Login:
    post:
      tags:
        - Auth
      summary: Authenticate user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginUser"
        required: true
      responses:
        "200":
          description: Successful authentication
          headers:
            Set-Cookie:
              style: simple
              explode: false
              schema:
                type: string
                example: session=87s97sdhgf279293f8w0e9
        "401":
          description: Invalid credentials
        "404":
          description: User not found
  /Logout:
    post:
      tags:
        - Auth
      summary: logout a user from the system and delete his cookie
      responses:
        "200":
          description: "the user has ben successfully logged out"
  /users/favorites:
    get:
      tags:
        - Users
      summary: List a user’s favorite recipes

      responses:
        "200":
          description: Favorite recipe previews
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RecipePreview"
        "404":
          description: User favorite section is not found
    post:
      tags:
        - Users
      summary: Add a recipe to favorites
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/userId_favorites_body"
        required: true
      responses:
        "204":
          description: Added to favorites
  /users/recipes:
    get:
      tags:
        - Users
      summary: Recipes created by the user
      responses:
        "200":
          description: User recipe previews
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RecipePreview"
        "400":
          description: Invalid data provided
        "404":
          description: User not found
    post:
      tags:
        - Users
      summary: Create a new recipe and save it for user recipes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewRecipe"
        required: true
      responses:
        "201":
          description: Recipe created successfully
        "400":
          description: Invalid recipe data

  /users/recipes/{recipeID}:
    get:
      tags:
        - Users
      summary: specific Recipe created by the user
      parameters:
        - name: recipeID
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: specific recipe
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RecipeDetail"
        "400":
          description: Invalid data provided
        "404":
          description: User not found
    delete:
      tags:
        - Users
      summary: Delete recipe from user recipes
      parameters:
        - name: recipeID
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Recipe deleted successfully
        "400":
          description: Invalid recipe data
        "404":
          description: User or recipe not found

  /users/last-watched:
    get:
      tags:
        - Users
      summary: Recently viewed recipes
      responses:
        "200":
          description: Recently watched recipe previews
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RecipePreview"
  /users/family-recipes:
    get:
      tags:
        - FamilyRecipes
      summary: List the user’s family recipes
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Family recipe previews
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FamilyRecipePreview"
    post:
      tags:
        - FamilyRecipes
      summary: Add a new family recipe for the user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewFamilyRecipe"
        required: true
      responses:
        "201":
          description: Family recipe created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FamilyRecipeDetail"
  /users/family-recipes/{FamilyRecipeID}:
    get:
      tags:
        - FamilyRecipes
      summary: Get one of the user’s family recipes
      parameters:
        - name: FamilyRecipeID
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Family recipe details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FamilyRecipeDetail"
        "404":
          description: Not found
  /users/meal-plans:
    get:
      tags:
        - MealPlan
      summary: Retrieve the user’s current meal plan
      responses:
        "200":
          description: Ordered list of planned recipes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MealPlan"
    post:
      tags:
        - MealPlan
      summary: Add a recipe to the meal plan
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/userId_mealplan_body"
        required: true
      responses:
        "201":
          description: Added to meal plan
    delete:
      tags:
        - MealPlan
      summary: Clear the entire meal plan
      responses:
        "204":
          description: Cleared
  /users/meal-plans/{recipeId}:
    delete:
      tags:
        - MealPlan
      summary: Remove a recipe from the meal plan
      parameters:
        - name: recipeId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Deleted
    post:
      tags:
        - MealPlan
      summary: Add a recipe to the meal plan
      parameters:
        - name: recipeId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Added to meal plan
    patch:
      tags:
        - MealPlan
      summary: Update order or progress of a planned recipe
      parameters:
        - name: recipeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/mealplan_recipeId_body"
        required: true
      responses:
        "204":
          description: Updated
  /recipes/random:
    get:
      tags:
        - Recipes
      summary: Retrieve random public recipes
      parameters:
        - name: count
          in: query
          required: false
          schema:
            type: integer
            default: 3
      responses:
        "200":
          description: A list of random recipe previews
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RecipePreview"
  /recipes/search:
    get:
      tags:
        - Recipes
      summary: Search recipes by text and filters
      parameters:
        - name: query
          in: query
          description: Free‑text search term
          required: false
          schema:
            type: string
        - name: cuisine
          in: query
          description: Optional cuisine filter
          required: false
          schema:
            type: string
        - name: diet
          in: query
          description: Optional diet filter
          required: false
          schema:
            type: string
        - name: intolerance
          in: query
          description: Optional intolerance filter
          required: false
          schema:
            type: string
        - name: number
          in: query
          description: Result size
          required: false
          schema:
            type: integer
            default: 5
            enum:
              - 5
              - 10
              - 15
        - name: sort
          in: query
          required: false
          schema:
            type: string
            enum:
              - prepTime
              - popularity
      responses:
        "200":
          description: Search result list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RecipePreview"
        "204":
          description: No recipes found
  /recipes/{recipeID}:
    get:
      tags:
        - Recipes
      summary: Fetch full recipe details
      parameters:
        - name: recipeID
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Recipe details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecipeDetail"
        "404":
          description: Recipe not found
components:
  schemas:
    RegisterUser:
      required:
        - country
        - email
        - firstname
        - lastname
        - password
        - username
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          pattern: "^[A-Za-z]+$"
          type: string
          description: Username must be 3-8 characters long and contain only English letters.
          example: Ilaygav
        firstname:
          type: string
          example: Ilay
        lastname:
          type: string
          example: Gavrilenko
        country:
          type: string
          description: Must be one of the countries retrieved from https://restcountries.com/v3.1/all
          example: Israel
        password:
          maxLength: 10
          minLength: 5
          pattern: "^(?=.*[0-9])(?=.*[^A-Za-z0-9]).{5,10}$"
          type: string
          description: Password must be 5-10 characters long and include at least one number and one special character.
          format: password
          example: Ill@@a88
        password_confirm:
          type: string
          description: "In order to make sure the user choose the desire password, confirmation is needed"
          format: password
          example: Ill@@a88
        email:
          pattern: "^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$"
          type: string
          description: Use regular email format
          format: email
          example: ilay97Gav@gmail.com
    LoginUser:
      required:
        - password
        - username
      type: object
      properties:
        username:
          type: string
          description: Username must be 3-8 characters long and contain only English letters.
          example: Ilaygav
        password:
          type: string
          description: Password must be 5-10 characters long and include at least one number and one special character.
          format: password
          example: Ill@@a88
    RecipePreview:
      type: object
      properties:
        id:
          type: string
          example: "12345"
        title:
          type: string
          example: Apple Pie
        image_url:
          type: string
          description: URL of the recipe image.
          format: uri
          example: https://joyfoodsunshine.com/wp-content/uploads/2019/08/best-apple-pie-recipe-from-scratch-8.jpg
        prep_time_minutes:
          type: integer
          example: 60
        likes:
          type: integer
          example: 120
        is_vegan:
          type: boolean
          example: false
        is_gluten_free:
          type: boolean
          example: true
        viewed_by_user:
          type: boolean
          example: true
        is_favorite:
          type: boolean
          example: false
    RecipeDetail:
      allOf:
        - $ref: "#/components/schemas/RecipePreview"
        - type: object
          properties:
            servings:
              type: integer
            ingredients:
              type: array
              items:
                $ref: "#/components/schemas/Ingredient"
            instructions:
              type: array
              items:
                type: string
    NewRecipe:
      required:
        - image
        - ingredients
        - instructions
        - servings
        - title
      type: object
      properties:
        title:
          type: string
          example: Chocolate Cake
        image_url:
          type: string
          format: uri
          example: "https://cdn.apartmenttherapy.info/image/upload/f_auto,q_auto:eco,c_fill,g_auto,w_1500,ar_3:2/k%2FPhoto%2FRecipes%2F2024-01-chocolate-cake%2Fchocolate-cake-0632-edit-32"
        prep_time_minutes:
          type: integer
          example: 45
        ingredients:
          type: array
          items:
            $ref: "#/components/schemas/Ingredient"
        instructions:
          type: array
          items:
            type: string
            example: Mix flour and sugar.
        is_vegan:
          type: boolean
          example: false
        is_gluten_free:
          type: boolean
          example: false
        servings:
          type: integer
          example: 8
        favorites:
          type: integer
          example: 12
          default: 0
    Ingredient:
      type: object
      properties:
        name:
          type: string
          example: Flour
        amount:
          type: number
          example: 3.5
        unit:
          type: string
          example: cups
    FamilyRecipeBase:
      required:
        - familyMember
        - occasion
      type: object
      properties:
        BelongsTofamilyMember:
          type: string
          description: Name or relation of the family member the recipe originates from
        occasion:
          type: string
          description: "Typical event/season when this dish is prepared (e.g., Passover, birthdays)"
    FamilyRecipePreview:
      allOf:
        - $ref: "#/components/schemas/RecipePreview"
        - $ref: "#/components/schemas/FamilyRecipeBase"
    FamilyRecipeDetail:
      allOf:
        - $ref: "#/components/schemas/RecipeDetail"
        - $ref: "#/components/schemas/FamilyRecipeBase"
        - type: object
          properties:
            stepImages:
              type: array
              items:
                type: string
                format: uri
    NewFamilyRecipe:
      allOf:
        - $ref: "#/components/schemas/NewRecipe"
        - $ref: "#/components/schemas/FamilyRecipeBase"
    MealPlanItem:
      type: object
      properties:
        recipeId:
          type: string
        title:
          type: string
        image:
          type: string
          format: uri
        position:
          type: integer
          description: 1‑based ordering in the meal plan
        progress:
          maximum: 1
          minimum: 0
          type: number
          description: Cooking progress (0‑1)
    MealPlan:
      type: array
      items:
        $ref: "#/components/schemas/MealPlanItem"
    userId_favorites_body:
      required:
        - recipeId
      type: object
      properties:
        recipeId:
          type: string
    userId_mealplan_body:
      required:
        - recipeId
      type: object
      properties:
        recipeId:
          type: string
        position:
          type: integer
          description: |
            Optional 1‑based index to insert the recipe at.
            Omit to append to the end.
    mealplan_recipeId_body:
      type: object
      properties:
        position:
          type: integer
          description: New 1‑based position in the plan
        progress:
          maximum: 1
          minimum: 0
          type: number
          description: "Completion ratio (0 = not started, 1 = done)"
